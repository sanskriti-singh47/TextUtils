{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","React","createElement","className","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","data-bs-dismiss","aria-label","Navbar","Fragment","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","id","aria-current","onClick","toggleMode","htmlFor","TextForm","text","setText","useState","style","color","heading","value","backgroundColor","onChange","event","target","rows","handleUpClick","newText","showAlert","handleLowerClick","handleTitleClick","replace","letter","handleExtraSpaces","split","join","handleCopy","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","handleClearClick","length","App","setMode","setAlert","message","setTimeout","aboutText","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.4f9495e6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n\r\n  const capitalize =(word)=>\r\n  {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n\r\n  return (\r\n    props.alert &&\r\n    <div>\r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn-close\"\r\n          data-bs-dismiss=\"alert\"\r\n          aria-label=\"Close\"\r\n        ></button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">\r\n                  {props.aboutText}\r\n                </Link>\r\n              </li> */}\r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark':'light'}`}>\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                id=\"flexSwitchCheckDefault\"\r\n                onClick={props.toggleMode}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n                Enable Dark Mode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: propTypes.string.isRequired,\r\n  aboutText: propTypes.string.isRequired,\r\n};\r\n\r\n// Navbar.defaultProps = {\r\n//     title:'Website',\r\n//     aboutText:'about Text'\r\n// }\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    // console.log('UpperCase was clicked: ' + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert('Converted To UpperCase','success');\r\n  };\r\n\r\n  const handleLowerClick = () => {\r\n    // console.log('UpperCase was clicked: ' + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert('Converted To LowerCase','success');\r\n  };\r\n\r\n  const handleClearClick = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert('Clear','success');\r\n  };\r\n\r\n  const handleTitleClick = () => {\r\n    let newText = text.replace(/(^\\w{1})|(\\s+\\w{1})/g, (letter) =>\r\n      letter.toUpperCase()\r\n    );\r\n    setText(newText);\r\n    props.showAlert('First Letter Converted in UpperCase','success');\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    // console.log('on change !');\r\n    setText(event.target.value);\r\n  };\r\n \r\n  const handleCopy = ()=>{\r\n    var text = document.getElementById('myBox');\r\n    text.select();\r\n    text.setSelectionRange(0,9999);\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Copied to Clipboard!\",\"success\");\r\n\r\n  }\r\n\r\n  const handleExtraSpaces = ()=>{\r\n    var newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert('Extra Spaces Remove','success');\r\n\r\n  }\r\n  \r\n\r\n  const [text, setText] = useState(\"\");\r\n\r\n  //text ='enter' ; //wrong way to change the state\r\n  // setText('enter');  //Correct way to change the state\r\n  return (\r\n    <div style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}>\r\n      <h1>{props.heading} </h1>\r\n      <div className=\"mb-3\">\r\n        <textarea\r\n          className=\"form-control\"\r\n          value={text}\r\n          id=\"myBox\"\r\n          style={{\r\n            backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\",\r\n            color: props.mode === \"dark\" ? \"white\" : \"black\"\r\n          }}\r\n          onChange={handleOnChange}\r\n          rows=\"8\"\r\n        ></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>\r\n        Convert to Uppercase\r\n      </button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleLowerClick}>\r\n        Convert to Lowercase\r\n      </button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleTitleClick}>\r\n        Title Case\r\n      </button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>\r\n        Extra Space Remove\r\n      </button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>\r\n        Copy\r\n      </button>\r\n      <button className=\"btn btn-danger mx-1\" onClick={handleClearClick}>\r\n        Clear Text\r\n      </button>\r\n\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h2>Your Text Summary</h2>\r\n        <p>\r\n          {text.split(\" \").length} words and {text.length} characters.\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes to read.</p>\r\n        <p>Line Count: {text.split(\"\\n\").length}</p>\r\n\r\n        <h2>Preview</h2>\r\n        <p>\r\n          {text.length > 0\r\n            ? text\r\n            : \"Enter something in textbox above to preview it here\"}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Alert from \"./components/Alert\";\nimport Navbar from \"./components/Navbar\";\n//import About from \"./components/About\";\nimport React, { useState } from \"react\";\nimport TextForm from \"./components/TextForm\";\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"grey\";\n      showAlert(\"Dark Mode has been Enabled\", \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n      // setInterval(() => {\n      //   document.title='TextUtils is Amazing Mode';\n      // },2000);\n      // setInterval(() => {\n      //   document.title='Install TextUtils Now';\n      // },1500);\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode has been Enabled\", \"success\");\n      document.title = \"TextUtils - Light Mode\";\n    }\n  };\n\n  return (\n    <>\n        <Navbar\n          title=\"TextUtils\"\n          aboutText=\"About\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <TextForm\n                heading=\"Enter the text to analyze below\"\n                mode={mode}\n                showAlert={showAlert}\n              />\n        </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}